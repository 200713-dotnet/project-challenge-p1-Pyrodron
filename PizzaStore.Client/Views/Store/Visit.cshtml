@model PizzaStore.Client.Models.StoreViewModel
@{
    ViewData["Title"] = "Store";
}

<h2>Welcome to @Model.StoreName!</h2>

<main>
  <section>
    <p>What would you like to order?</p>
    @using (Html.BeginForm("SubmitOrder", "Store", FormMethod.Post)) {
      <table style="width: 100%">
        <tr>
          <td>Select</td>
          <td>Name</td>
          <td>Size</td>
          <td>Cost</td>
          <td>Crust</td>
          <td>Quantity</td>
          @foreach (ToppingViewModel topping in Model.Menu[0].SelectedToppings) { // all pizzas will have the same toppings available to select from
            <td>@topping.Name</td>
          }
        </tr>
        @for (int i = 0; i < Model.Menu.Count(); i++) {
          <tr>
            <td>@Html.CheckBoxFor(m => m.Menu[i].Checked)</td>
            @Html.HiddenFor(m => m.Menu[i].ID)  @* sets the ID in the menu item to be sent back to the client *@
            <td>@Html.HiddenFor(m => m.Menu[i].Name)
            @Html.DisplayFor(m => m.Menu[i].Name)</td>
            <td>@Html.DropDownListFor(m => m.Menu[i].SelectedSize, new SelectList(Enum.GetValues(typeof(Size))), "Select Size")</td>
            <td>@Html.HiddenFor(m => m.Menu[i].Cost)
            $@Html.DisplayFor(m => m.Menu[i].Cost)</td>
            <td>
              @if (Model.Menu[i].ID == 0) {
                @Html.DropDownListFor(m => m.Menu[i].SelectedCrust, new SelectList(Model.Crusts, "Value", "Text", Model.Menu[i].DefaultCrust), new {@class = "form-control"})
              } else {
                @Model.Crusts[int.Parse(Model.Menu[i].SelectedCrust) - 1].Text
                @Html.HiddenFor(m => m.Menu[i].SelectedCrust)
              }
            </td>
            <td>@Html.EditorFor(m => m.Menu[i].Quantity, new { htmlAttributes = new { @type = "number", @min = "0", @step = "1", value = "0" }})</td>
            @for (int j = 0; j < Model.Menu[i].SelectedToppings.Length; j++) {
              @if (Model.Menu[i].ID == 0) {
                <td>@Html.CheckBoxFor(m => m.Menu[i].SelectedToppings[j].IsSelected)</td>
              } else {
                @if (Model.Menu[i].SelectedToppings[j].IsSelected) {
                  <td>✔️</td>
                } else {
                  <td>❌</td>
                }
                @Html.HiddenFor(m => m.Menu[i].SelectedToppings[j].IsSelected)
              }

              @Html.HiddenFor(m => m.Menu[i].SelectedToppings[j].ID)
              @Html.HiddenFor(m => m.Menu[i].SelectedToppings[j].Name)
            }
          </tr>
        }
      </table>
      <br>
      <input type="submit" value="Submit" name="SubmitOrder">
      <input type="submit" value="Add a Custom Pizza" name="AddCustom">
      <input type="submit" value="Go Back" name="Back">
    }
    <p>@Model.ReasonForError</p>
  </section>
</main>